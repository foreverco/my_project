-初始vue
  Vue 是一个轻量级的以数据驱动的 MVVM 框架,它的核心是一个响应式的数据绑定系统,
    他和JQ最大的不同在于JQ通过操作DOM来改变页面内容,而Vue是通过操作数据来改变页面.
    常用于开发SPA.
    M - Model  V - View  VM - ViewModel
    当数据发生改变时,视图也会发生改变
    视图发生改变时,也会改变数据,这是一个双向数据绑定
  我们学习要做到的三步:
    1.掌握vue的核心语法
    2.熟悉vue的技术栈
    3.理解如何快速的通过vue来构建一个项目(实战)

Vue 开发环境的部署
  1.直接在script变迁中引入vue.js文件
    vue.js      :开发版本
    vue.min.js  :生产版本
  2.通过 npm 安装 vue (构建项目推荐)

创建一个 Vue 实例

Vue指令(directives)
  Vue指令都是 v- 开头的特殊属性,一般是用来操作DOM的
  1.v-text / v-html
    都可以直接输出 data 中的变量,JS出错时,会暴露{{}},对用户不是很友好,可以用v-html/v-text来解决
    v-text : 输出文本内容
    v-html : 还能输出html内容

  2.v-on 事件处理
    v-on : 用来注册事件的,给DOM元素绑定事件,可以用 @ 来代替 v-on,比如:v-on:click='event' 简写成 @click='event'
    事件修饰符:
      (1) .stop       -阻止冒泡
      (2) .prevent    -阻止事件
      (3) .capture    -捕获触发
      (4) .self       -事件只有在该元素上触发时才执行回调
      (5) .once       -事件只执行一次

  3.条件渲染
    v-if v-else / v-show
    v-if = 判断是否加载
    v-show :判断是否显示,相当于调整display属性
    总结: v-if 需要渲染DOM,因此切换速度上比v-show慢
          v-show 需要提前渲染,因此初次加载时,比 v-if 开销大,
          如果频繁切换显示和隐藏 使用 v-show.
          如果要提高整个页面的初次加载速度 v-if

  4.列表渲染
    v-for 是用来渲染一组数据的(数组/对象).
    语法: v-for ='item in items'

  5.v-model 双向数据绑定
    把数据绑定在表单元素上,可以实现双向数据绑定

  6.v-bind 给html添加属性的,当属性是变量时,用 v-bind来绑定属性 class='className' 
    v-bind:class='c1' 简写方法   :class='c1'
