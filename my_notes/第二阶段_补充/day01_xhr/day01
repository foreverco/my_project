JS高级 - ECMAScript + DOM + BOM
回顾第二阶段内容:
   1.基本数据类型 
      number string boolean null undefined
   2.引用类型
      Array Object 
   3.内置对象
      Number String Boolean Array Object Function Math RegExp Date Global Error

   面向对象:
      继承:通过原型来继承的 prototype
      1.定义一个构造函数
         function Student(){
            this.sanme = sanme;
            ...
            Student.prototype.getName = function(){
               console.log(this.sname);
            }
         }
      2.把公共方法定义在原型上
      3.new 构造函数
         var xt = new Student('小滕');
         new 做的事情
         1. 创建一个新的空对象
         2. 构造函数的prototype属性指向它的原型对象,this指向实例化出来的对象xm
         3. xm对象的__proto__属性指向原型对象
         4. 执行构造函数内部代码

-与服务器通信 
1.HTTP协议
2.Ajax

   -Ajax 
1.AsynChronous Javascript And Xml
   异步的js和xml
   Ajax是在不刷新浏览器的情况下,浏览器异步的,悄悄的向服务器发送HTTP请求,服务器接收请求,并响应数据,浏览器解析数据,页面实现局部刷新.
2.Ajax 不是一门新的编程语言,只是一系列web技术的集合.HTML CSS JS DOM XML JSON...
   优点:用户体验好,异步通信,响应数据块
   缺点:存在安全问题,破坏了浏览器的后退机制
3.原生的使用方法
   创建5步:
      1.创建XMLHttpRequest(Ajax的核心对象)对象
         XMLHttpRequest属于BOM对象
         var xhr = new XMLHttpRequest();
      2.建立连接
         xhr.open(method,url,async)
         method:  请求方式 get/post
         url:     请求地址
         async:   是否发送异步请求 true
      3.发送请求
         xhr.send(data) 
      4.监听请求 - 监听通信状态改变事件
         xhr.onreadystatechange = function(){
            if(xhr.readyState == 4 && xhr.status == 200){
               //拿到响应数据
               5.处理数据
                  xhr.reponseText:拿到响应数据
            }
            //事件处理函数
            两个属性:
               readyState:通信状态
                  0 :   请求未建立,还没调用open()
                  1 :   请求已建立,但是没有发送
                  2 :   请求已发送,正在处理中
                  3 :   请求还在处理中,响应头部有部分数据可用
                  4 :   响应已完成,可以获取响应了
               status:状态码
                  200: 表示 ok
                  404: 表示 未找到页面
         }
      
-Ajax请求的数据类型
      字符串 | XML | JSON (最主要的数据类型)
JSON 是JS的一个子集,是一种基于文本的数据交换格式 
      后缀名 .json
特点:
      1.易于程序员的编写与阅读
      2.json是目前网络上使用最广泛的数据格式,已经替代了XML
      3.易于计算机的解析和生成
支持的数据类型
      Number String Array Object null

      创建json文本 - 
      1.数组
            ["张无忌","周芷若","赵敏"]
      2.对象
            {
                  "name1":"周芷若",
                  "name2":"张无忌",
                  "name3":"赵敏"
            }
      3.数组和对象的结合 -1
            [
            {"歌手":"赵磊","演员":"章子怡"},
            {"歌手":"林俊杰","演员":"李易峰"}
            ]
      4.数组和对象的结合 -2
            {
            "歌手":["林俊杰","周杰伦","谢霆锋"],
            "演员":["苍井空","泷泽萝拉","波多野结衣"]
            }
JSON 的 API(JS)
      1.JSON.parse():将json字符串转化为 JS对象
      2.JSON.stringify():将JS对象转化为json字符串

在客户端构建json格式的字符串