项目实现：
 1. 利用vue的脚手架工具 @vue/cli 版本 3
     vuecli3 集成了 webpack 4
    帮我们生成项目目录结构 源码文件src
    vue.config.js - webpack的配置文件，webpack
    如果不使用脚手架，选择一个模块管理工具(webpack)，手动写 webpack.config.js 

 2. src目录中展示项目目录结构
     api           请求的文件
     components    公共组件
     common        公共逻辑 样式
     base          基础组件 
     config        JS 配置文件(语义化，公共参数)  
     store         vuex 的文件          
     router        路由文件
     assets        静态资源 

 3. 入口文件 main.js 配置 
    单文件(SPA)应用中，index.html 中只有一个 div    
    前端路由：vue-router    
        router.js
             
    状态管理： vuex
        store / index.js     
    
    vuex 的数据流 单向数据流
     
    组件之间的通信：几种方式 
       定义 props
       $emit 派发一个自定义事件
       EventBus  类似 Vuex  全局对象来定义数据     
       使用 vuex 

  1. 我们制作导航栏，有四个routerlink来实现，通过配置路由来实现页面的切换。      

  2. 首先开发推荐页 (轮播 + 热门歌曲推荐)
     轮播：插件  vue-awesome-swiper swiper 提供的
                Element UI , Vant UI  vue的组件库 

    热门歌曲推荐：
     1. 请求接口数据(产生跨域)，使用jsonp来跨域请求。
     由于接口设置了referer限制，直接跨域请求是请求不到的，我们是通过设置服务器端代理(proxy)来实现。
     webpack 中集成了代理的插件 http-proxy-middleware

     2. 前端发起请求，请求我们代理的地址。通过 Axios 来实现
        Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。

     3. 滚动实现 ： better-scroll 插件  

 3. 歌手页面 - 实现播放功能 核心功能 
     player(全局组件) 组件中实现核心播放功能 
     播放 | 切换歌曲 | 模式切换 | 进度拖动
     播放功能需要用到的状态时通过 Vuex 来维护的
     

         